#!/usr/bin/python
# -*- coding: utf8 -*-
#Porting Checker

__author__ = 'Tan Ying<ying.tan@tcl.com>' 

import os
import sys
from utils import *

logger = log.getLogging('PortingChecker')

def main():
    """
    The entrance of Porting Checker
    """
    # The standard_dict for comparation, transfered form standard.json
    standard_dict = get_standard_pkg_config()
    # The path_dict from phone
    path_dict = get_path_from_phone()
    # get the difference dict
    diff_dict = check_handler(standard_dict, path_dict)
    # displace diff_dict in compare_result.txt
    result_string = ''
    for pkg in diff_dict:
        info = diff_dict[pkg]

        if info:
            result_string += '%s\n' % pkg
            if info.has_key('info'):
                result_string += '    %s' % info['info']
            else:
                if info.has_key('pkg_path'):
                    result_string += '    Different path,\n'
                    result_string += '        standard_path: %s\n' % info['standard_path']
                    result_string += '        pkg_path: %s\n' % info['pkg_path']
                if info.has_key('pkg_version'):
                    result_string += '    Different version,\n'
                    result_string += '        standard_version: %s\n' % info['standard_verison']
                    result_string += '        pkg_version: %s\n' % info['pkg_version']
            result_string += '\n'

    f = open(config.RESULT_FILE, 'wb')
    result = str(result_string)
    f.write(result)
    f.close()


def check_handler(standard_dict, path_dict):
    diff_dict = {}

    for pkg in standard_dict:
        print 'Checking %s now...' % pkg
        diff_dict[pkg] = {}

        if path_dict.has_key(pkg):
            # compare path
            pkg_path = path_dict[pkg]
            if standard_dict[pkg].has_key('path'):
                result = compare_string(standard_dict[pkg]['path'], pkg_path)
                if not result:
                    diff_dict[pkg]['pkg_path'] = pkg_path
                    diff_dict[pkg]['standard_path'] = standard_dict[pkg]['path']
                    print '    Different path,'
                    print '        standard_path: %s' % standard_dict[pkg]['path']
                    print '        pkg_path: %s' % pkg_path
                else:
                    print '    Equal path'
            else:
                #raise StandardJsonError('Package:%s lack versionName in standard.json')
                print 'Error: %s lack versionName in standard.json' % pkg
                sys.exit(1)

            pkg_version = get_version_from_phone(pkg)
            if not pkg_version:
                pkg_version = ''

            # compare version
            if standard_dict[pkg].has_key('versionName'):
                result = compare_string(standard_dict[pkg]['versionName'], pkg_version)
                if not result:
                    diff_dict[pkg]['pkg_version'] = pkg_version
                    diff_dict[pkg]['standard_verison'] = standard_dict[pkg]['versionName']
                    print '    Different versionName,'
                    print '        standard_verison: %s' % standard_dict[pkg]['versionName']
                    print '        pkg_version: %s' % pkg_version

                else:
                    print '    Equal version'
            else:
                #raise StandardJsonError('Package:%s lack versionName in standard.json' % pkg)
                print 'Error: %s lack versionName in standard.json' % pkg
                sys.exit(1)

        else:
            #out put error msg
            print '    Package not porting.'
            diff_dict[pkg]['info'] = 'Package not porting.'

    return diff_dict

if __name__ == '__main__':
    main()


